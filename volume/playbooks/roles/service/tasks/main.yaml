- name: Ensure /var/www/html directory has correct permissions.
  file:
    path: /var/www/html
    state: directory
    owner: www-data
    group: www-data

- name: Ensure .ssh directory exists.
  file:
    path: /var/www/.ssh
    state: directory
    mode: 0700
    owner: www-data
    group: www-data

- name: Ensure GitHub SSH key is present on the server.
  copy:
    src: "{{ git_ssh_key }}"
    dest: /var/www/.ssh/git_ssh_key
    mode: 0600
    owner: www-data
    group: www-data

# See: https://stackoverflow.com/a/37096534/100134
- name: Ensure setfacl support is present.
  package: name=acl

- name: Ensure /var/www/{{ service_name }} does not exist
  file:
    path: /var/www/{{ service_name }}
    state: "absent"

- name: Clone repository {{ repository }}:{{ branch }} to /var/www/{{ service_name }}
  git:
    repo: "{{ repository }}"
    dest: "/var/www/{{ service_name }}"
    accept_hostkey: yes
    key_file: /var/www/.ssh/git_ssh_key
    version: "{{ branch }}"
    depth: 1
  become_user: www-data

- name: Remove /var/www/{{ service_name }}/.git directory
  file:
    path: /var/www/{{ service_name }}/.git
    state: absent

- name: Build image {{ service_name }}_image
  docker_image:
    name: "{{ service_name }}_image"
    build:
      path: "/var/www/{{ service_name }}"
      pull: false
    state: present
    source: build
    force_source: true

- name: Run image {{ service_name }}_image under container {{ service_name }}_container
  docker_container:
    name: "{{ service_name }}_container"
    image: "{{ service_name }}_image"
    env: "{{ docker_env }}"
    state: started
    recreate: true
    restart_policy: "always"
    volumes:
      - {{ volume | default('/tmp:/tmp') }}
    published_ports:
      - "{{ port_nginx }}:{{ port_container }}"

- name: Register nginx block {{ domain }} to proxy through http://localhost:{{ port_nginx }}/
  copy:
    content: >
      server {
          listen 80;
          server_name {{ domain }};
          client_max_body_size 50M;
          location / {
              proxy_pass http://127.0.0.1:{{ port_nginx }}/;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
          }
          location /socket {
              proxy_pass http://127.0.0.1:{{ port_nginx }}/;
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
          }
      }
    dest: /etc/nginx/sites-enabled/{{ domain }}
    mode: 0600
    owner: www-data
    group: www-data

- name: Call certbot with email {{ cerbot_email }}
  command: "certbot --nginx --email {{ cerbot_email }} -d {{ domain }} --agree-tos --non-interactive --redirect"

- name: Restart nginx
  command: systemctl restart nginx.service

- name: Delete /var/www/{{ service_name }}
  file:
    path: /var/www/{{ service_name }}
    state: "absent"
